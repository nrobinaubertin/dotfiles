#!/bin/sh

dist() {
    x1="$(printf "%s" "$1" | tr -d "." | cut -c 1-2)"
    y1="$(printf "%s" "$2" | tr -d "." | cut -c 1-2)"
    x2="$(printf "%s" "$3" | tr -d "." | cut -c 1-2)"
    y2="$(printf "%s" "$4" | tr -d "." | cut -c 1-2)"
    printf "%s" "$(( (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) ))"
}

temp_dir="$(dirname "$(mktemp)")"
servers_file="$temp_dir/speedtest.xml"
servers_distances="$temp_dir/speedtest.servers"

# put servers files in /tmp as cache
if ! [ -f "$servers_distances" ]; then

    if ! [ -f "$servers_file" ]; then
        printf "Getting servers list from speedtest.net...\\n"
        wget -qO "$servers_file" http://www.speedtest.net/speedtest-servers.php
    fi

    servers_list="$(cat "$servers_file" | sed -E 's/.*url="([a-zA-Z0-9:\/._-]+)".*lat="([0-9.-]+)".*lon="([0-9.-]+)".*/\1 \2 \3/g' | grep -E "^http" | grep ".php" | grep -v "<")"

    # get current geolocation
    geoloc="$(curl -s ipinfo.io | grep loc | cut -d'"' -f4)"
    lat="$(printf "%s" "$geoloc" | cut -d, -f1)"
    long="$(printf "%s" "$geoloc" | cut -d, -f2)"

    printf "Calculating distances...\\n"
    distances="$(
        printf "%s" "$servers_list" | while read -r SERVER; do
            base_url="$(printf "%s" "$SERVER" | cut -d" " -f1 | sed -E 's/\/upload.php$//')"
            slat="$(printf "%s" "$SERVER" | cut -d" " -f2)"
            slong="$(printf "%s" "$SERVER" | cut -d" " -f3)"
            dist="$(dist "$lat" "$long" "$slat" "$slong")"
            printf "%s %s\\n" "$dist" "$base_url"
        done
    )"
    printf "%s" "$distances" | sort -n > "$servers_distances"
fi

# mesure latencies for the 40 most close servers
latencies="$(
    head -n 10 "$servers_distances" | while read -r SERVER; do
        base_url="$(printf "%s" "$SERVER" | cut -d" " -f2 | sed -E 's/\/upload(\.php)?$//')"
        # domain="$(printf "%s" "$base_url" | sed -E 's/^https?:\/\/(www)?//' | sed -E 's/\/.*$//')"
        latency="$(curl -sw "%{time_total}" -o /dev/null "$base_url/latency.txt" | tr -d ",." | cut -c 1-4)"
        printf "%s %s\\n" "$latency" "$base_url"
    done
)"

node="$(printf "%s" "$latencies" | sort -n | head -n1)"
node_speed="$(printf "%s" "$node" | cut -d" " -f1 | sed -E "s/^0+//g")"
node_name="$(printf "%s" "$node" | cut -d" " -f2 | sed -E 's/^https?:\/\/(www)?//' | sed -E 's/\/.*$//')"
printf "fastest node: %s\\n" "$(printf "%s %sms" "$node_name" "$node_speed")"

# remove top and bottom to remove irregularities
number="$(printf "%s" "$latencies" | wc -l)"
to_remove="$(( number / 5 + 1 ))"

latencies="$(printf "%s" "$latencies" | sort -nr | tail -n +"$to_remove" | sort -n | tail -n +"$to_remove")"

# calculate the mean latency
sum="$(printf "%s" "$latencies" | cut -d" " -f1 | awk '{sum += $1} END {print sum}')"
number="$(printf "%s" "$latencies" | wc -l)"
printf "speedtest mean network latency: %sms\\n" "$(( sum / number ))"

# test /upload.php to get the size to download
# return value : "size=500"
# then get the corresponding image http://speed1.blix.com/speedtest/ and mesure speed. Deduce download speed

# mesure download
#downloads="$(
#	printf "%s" "$servers_list" | while read -r URL; do
#		size="$(curl -s "$URL" | cut -d"=" -f2)"
#        base_url="$(printf "%s" "$URL" | sed -E 's/\/upload.php$//')"
#        printf "%s %s\\n" "$size" "$base_url"
#		# printf "%s\\n" "$(curl -sw "%{time_total}" -o /dev/null "$URL/latency.txt" | cut -d"," -f2 | cut -c 1-4)"
#	done
#)"
#
#printf "%s" "$downloads"
