#!/bin/sh

### SSYNC ###
# Needs ssh, rsync and realpath to work properly
# This script is a wrapper around rsync to allow incremental backups using hard links

# print out help
usage() {
    printf "\\n"
    printf "    ssync [OPTION...] INPUT DEST\\n\\n"
    printf "    -h           Displays this help.\\n"
    printf "    -p PORT      Will use PORT for DEST.\\n"
    printf "    -s SPEED     Will stay under SPEED. SPEED is in KiB.\\n"
    printf "\\n"
    exit 0
}

while getopts ":p:s:h" opt; do
    case $opt in
        p) port="$OPTARG";;
        s) speed="$OPTARG";;
        h) usage;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1;;
    esac
done

# remove arguments processed by getopts
shift "$((OPTIND-1))"

[ $# = 0 ] && usage

if [ -n "$1" ] && [ -d "$1" ]; then
    source_dir=$(realpath "$1")
else
    printf "You need to specify a valid input directory\\n"
    usage
fi

# default values
port="${port:-22}"
speed="${speed:-0}"

if [ -n "$2" ] && [ "$(echo "$2" | grep -E "[^@:]+@[^@:]+:.*")" != "" ]; then
    target_dir=$(echo "$2" | cut -d: -f2)
    user=$(echo "$2" | cut -d@ -f1)
    domain=$(echo "$2" | cut -d: -f1 | cut -d@ -f2)
	target_dir="$(ssh -p "${port}" "${user}"@"${domain}" realpath "$target_dir")"
else
    printf "Second argument should be a network location\\n"
    printf "Example: test@example.com:~/\\n"
    usage
fi

# name of the shadow directory
shadow=".shadow-rsync"

# first, sync/create the shadow directories
if ! {
	rsync -a --delete --link-dest="${source_dir}" --exclude="/${shadow}" "${source_dir}/" "${source_dir}/${shadow}"
	ssh -p "${port}" "${user}"@"${domain}" rsync -a --delete --link-dest="$target_dir" --exclude="/${shadow}" "${target_dir}/" "${target_dir}/${shadow}"
}; then
	echo "Could not sync shadow directories. Aborting"
	exit 1
fi

# sync the directory with the distant one (with the shadow directory).
# the idea is that if a file is moved, it will be in the shadow directory and not resynced
rsync -axHP -e "ssh -p ${port}" --bwlimit="${speed}" --no-inc-recursive --numeric-ids --delete-after "${source_dir}/" "${user}"@"${domain}":"${target_dir}"

# we can now remove the shadow directories
rm -rf "${source_dir:?}/${shadow:?}"
ssh -p "${port}" "${user}"@"${domain}" rm -rf "${target_dir:?}/${shadow:?}"
