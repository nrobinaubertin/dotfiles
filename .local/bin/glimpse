#!/bin/sh

# produces a system summary

RCol='\033[0m'; BGre='\033[1;32m'; Green='\033[0;32m'; Red='\033[0;31m'; Yellow='\033[0;33m'; White='\033[0;97m'

min() {
    [ "$1" -gt "$2" ] && echo "$2" || echo "$1"
}

kb_to_human() {
    kb=$1
    mb=$(( kb / 1024 ))
    gb=$(( kb / 1024 / 1024 ))
    if [ -n "$kb" ]; then
        if [ "$gb" -gt 0 ]; then
            r=$(( (mb - gb * 1024) / 100 ))
            printf "%s.%sGB" "$gb" "$r";
            exit
        fi
        printf "%sMB" "$mb";
    fi
}

usage() {
    n=$((20 * $1 / 100)); i="$n"
    printf "["
    if [ $i -gt 0 ]; then
        printf "%b%0$(min $i 10)s%b" "$Green" " " "$White" | tr " " "="
        i=$(( i - 10 ))
    fi
    if [ $i -gt 0 ]; then
        printf "%b%0$(min $i 5)s%b" "$Yellow" " " "$White" | tr " " "="
        i=$(( i - 5 ))
    fi
    [ $i -gt 0 ] && printf "%b%0${i}s%b" "$Red" " " "$White" | tr " " "="
    printf "%0$(( 20 - n ))s]" | tr " " "-"
}

printf "\\n%b" "$RCol"

(
    printf " %bMachine%b,%s\\n" "$BGre" "$White" "$(cat /proc/sys/kernel/hostname)"
    printf " %bSystem%b,%s\\n" "$BGre" "$White" "$(grep "PRETTY_NAME" /etc/os-release | cut -d'"' -f2)"
    printf " %bArchitecture%b,%s\\n" "$BGre" "$White" "$(uname -m)"
    printf " %bKernel%b,%s\\n" "$BGre" "$White" "$(uname -r)"
    printf " %bCPU%b,%s\\n" "$BGre" "$White" "$(grep -m1 "model name" /proc/cpuinfo | awk -F": " '{print $2}' | tr -s " ")"
    printf " %bMemory%b,%s\\n" "$BGre" "$White" "$(free -h --si | head -n2 | tail -n1 | awk '{print $2}')"
    printf " %bShell%b,%s\\n" "$BGre" "$White" "$SHELL"
    printf " %bTerminal%b,%s\\n" "$BGre" "$White" "$TERM"
    printf " %bIP%b,%s\\n" "$BGre" "$White" "$(awk '/32 host/ { print f } {f=$2}' /proc/net/fib_trie 2>/dev/null | tail -n1)"
    printf " %bGeometry%b,%sx%s\\n" "$BGre" "$White" "$(tput cols)" "$(tput lines)"
) | column -t -s,

printf "\\n%b" "$RCol"

(
    mem_total=$(grep -E "^MemTotal:" < /proc/meminfo | awk '{print $2}')
    swap_total=$(grep -E "^SwapTotal:" < /proc/meminfo | awk '{print $2}')
    mem_free=$(grep -E "^MemFree:" < /proc/meminfo | awk '{print $2}')
    swap_free=$(grep -E "^SwapFree:" < /proc/meminfo | awk '{print $2}')
    mem_buffers=$(grep -E "^Buffers:" < /proc/meminfo | awk '{print $2}')
    mem_cached=$(grep -E "^Cached:" < /proc/meminfo | awk '{print $2}')
    mem_reclaimable=$(grep -E "^SReclaimable:" < /proc/meminfo | awk '{print $2}')
    mem_used=$(( mem_total - mem_free - mem_buffers - mem_cached - mem_reclaimable ))
    swap_used=$(( swap_total - swap_free ))
    mem_p=$(( 100 * mem_used / mem_total ))
    swap_p=$(( 100 * swap_used / swap_total ))
    printf " %bType,Size,Free,Used%b\\n" "$BGre" "$RCol"
    printf " %bMem,%s,%s,%s%b\\n" "$White" "$(kb_to_human $mem_total)" "$(kb_to_human $((mem_total - mem_used)))" "$(usage "$mem_p")" "$RCol"
    printf " %bSwap,%s,%s,%s%b\\n" "$White" "$(kb_to_human $swap_total)" "$(kb_to_human $((swap_total - swap_used)))" "$(usage "$swap_p")" "$RCol"

    printf ",,\\n"

    printf " %bFilesystem,Size,Free,Used%b\\n" "$BGre" "$RCol"
    for i in $(df -hT | awk '$2 !~ "(tmpfs|squashfs|overlay)$" && NR!=1 {print $7}'); do
        p=$(df "$i" 2>/dev/null | tail -n1 | tr -s " " | cut -d' ' -f5 | tr -d "%")
        s=$(df -h "$i" 2>/dev/null | tail -n1 | tr -s " " | cut -d" " -f2)
        u=$(df -h "$i" 2>/dev/null | tail -n1 | tr -s " " | cut -d" " -f4)
        if [ -n "$s" ] && [ -n "$p" ]; then
            # white color trick to have the same number of characters for `column` that does not take escape sequences into account
            printf " %b%s,%s,%s,%s%b\\n" "$White" "$i" "$s" "$u" "$(usage "$p")" "$RCol"
        fi
    done
) | column -t -s,

printf "\\n%b" "$RCol"
