#!/bin/sh

# produces a system summary

RCol='\033[0m'; BGre='\033[1;32m'; Green='\033[0;32m'; Red='\033[0;31m'; Yellow='\033[0;33m'; White='\033[0;97m'

min() {
    [ "$1" -gt "$2" ] && echo "$2" || echo "$1"
}

kb_to_human() {
    kb=$1
    mb=$(( kb / 1024 ))
    gb=$(( kb / 1024 / 1024 ))
    if [ -n "$kb" ]; then
        if [ "$gb" -gt 0 ]; then
            r=$(( (mb - gb * 1024) / 100 ))
            printf "%s.%sG" "$gb" "$r";
            exit
        fi
        printf "%sM" "$mb";
    fi
}

usage() {
    n=$((20 * $1 / 100)); i="$n"
    printf "["
    if [ $i -gt 0 ]; then
        printf "%b%0$(min $i 10)s%b" "$Green" " " "$White" | tr " " "="
        i=$(( i - 10 ))
    fi
    if [ $i -gt 0 ]; then
        printf "%b%0$(min $i 5)s%b" "$Yellow" " " "$White" | tr " " "="
        i=$(( i - 5 ))
    fi
    [ $i -gt 0 ] && printf "%b%0${i}s%b" "$Red" " " "$White" | tr " " "="
    printf "%0$(( 20 - n ))s]" | tr " " "-"
}

printf "\\n%b" "$RCol"

(
    nbprocs="$(grep -c ^processor /proc/cpuinfo 2>/dev/null)"
    proctype="$(
      grep -m1 "model name" /proc/cpuinfo \
        | awk -F": " '{print $2}' \
        | sed -e 's/CPU//g' -e 's/(R)//g' -e 's/(TM)//g' -e 's/@//g' \
        | tr -s " "\
    )"
    printf " %bMachine%b,%s\\n" "$BGre" "$White" "$(cat /proc/sys/kernel/hostname)"
    printf " %bSystem%b,%s\\n" "$BGre" "$White" "$(grep "PRETTY_NAME" /etc/os-release | cut -d'"' -f2)"
    printf " %bArchitecture%b,%s\\n" "$BGre" "$White" "$(uname -m)"
    printf " %bKernel%b,%s\\n" "$BGre" "$White" "$(uname -r)"
    printf " %bCPU%b,%s\\n" "$BGre" "$White" "$nbprocs $proctype"
    printf " %bShell%b,%s\\n" "$BGre" "$White" "$SHELL"
    printf " %bIP%b,%s\\n" "$BGre" "$White" "$(awk '/32 host/ { print f } {f=$2}' /proc/net/fib_trie 2>/dev/null | tail -n1)"
) | awk 'BEGIN {FS=","} {printf "%-42s %s\n", $1, $2}'

printf "\\n%b" "$RCol"

(
  cpu="$(awk '{ print $1, $2, $3 }' /proc/loadavg)"
  printf " %bLoad average%b,%s%b\\n" "$BGre" "$RCol" "$cpu" "$RCol"
) | awk 'BEGIN {FS=","} {printf "%-39s %s\n", $1, $2}'

printf "\\n%b" "$RCol"

(
    mem_total=$(grep -E "^MemTotal:" < /proc/meminfo | awk '{print $2}')
    swap_total=$(grep -E "^SwapTotal:" < /proc/meminfo | awk '{print $2}')
    swap_free=$(grep -E "^SwapFree:" < /proc/meminfo | awk '{print $2}')
    swap_used=$(( swap_total - swap_free ))
    mem_buffers=$(grep -E "^Buffers:" < /proc/meminfo | awk '{print $2}')
    mem_cached=$(grep -E "^Cached:" < /proc/meminfo | awk '{print $2}')
    mem_sreclaimable=$(grep -E "^SReclaimable:" < /proc/meminfo | awk '{print $2}')
    mem_shmem=$(grep -E "^Shmem:" < /proc/meminfo | awk '{print $2}')
    mem_mapped=$(grep -E "^Mapped:" < /proc/meminfo | awk '{print $2}')
    mem_slab=$(grep -E "^Slab:" < /proc/meminfo | awk '{print $2}')
    mem_used=$(( mem_cached + mem_sreclaimable + mem_buffers + mem_slab + mem_mapped + mem_shmem ))

    mem_p=$(( 100 * mem_used / mem_total ))
    printf " %bType,Size,Free,Used%b\\n" "$BGre" "$RCol"
    printf " %bMem,%s,%s,%s%b\\n" "$White" "$(kb_to_human "$mem_total")" "$(kb_to_human $((mem_total - mem_used)))" "$(usage "$mem_p")" "$RCol"

    if [ "$swap_total" -gt 0 ]; then
      swap_p=$(( 100 * swap_used / swap_total ))
      printf " %bSwap,%s,%s,%s%b\\n" "$White" "$(kb_to_human "$swap_total")" "$(kb_to_human $((swap_total - swap_used)))" "$(usage "$swap_p")" "$RCol"
    fi

    printf ",,\\n"

    printf " %bFilesystem,Size,Free,Used%b\\n" "$BGre" "$RCol"
    for i in $(df -hT | awk '$2 !~ "(tmpfs|squashfs|overlay)$" && NR!=1 {print $7}'); do
        p=$(df "$i" 2>/dev/null | tail -n1 | tr -s " " | cut -d' ' -f5 | tr -d "%")
        s=$(df -h "$i" 2>/dev/null | tail -n1 | tr -s " " | cut -d" " -f2)
        u=$(df -h "$i" 2>/dev/null | tail -n1 | tr -s " " | cut -d" " -f4)
        d="$(echo "$i" | awk '{if(length($1) > 26) {print substr($1, 1, 11) ".." substr($1, length($1)-13)} else {print $1}}')"
        if [ -n "$s" ] && [ -n "$p" ]; then
            # white color trick to have the same number of characters for `column` that does not take escape sequences into account
            printf " %b%s,%s,%s,%s%b\\n" "$White" "$d" "$s" "$u" "$(usage "$p")" "$RCol"
        fi
    done
) | awk 'BEGIN {FS=","} {printf "%-35s %-7s %-7s %s\n", $1, $2, $3, $4}'

printf "\\n%b" "$RCol"
