#!/bin/sh

# control screen brightness directly with the backlight files


# to be able to use this script, add a udev rule by adding the /etc/udev/rules.d/backlight.rules file:
# ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="<vendor>", RUN+="/bin/chgrp <group> /sys/class/backlight/%k/brightness"
# ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="<vendor>", RUN+="/bin/chmod g+w /sys/class/backlight/%k/brightness"
# <vendor> should be something like intel_backlight (check `ls /sys/class/backlight`) and <group> could be one of your groups
# This can be done automatically by the --install command. Reboot afterwards
if [ "$1" = "--install" ]; then
  basedir="/sys/class/backlight"
  printf \
    'ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="%s", RUN+="/bin/chgrp %s /sys/class/backlight/%%k/brightness"' \
    "$(ls $basedir)" "$(id -gn)" | sudo tee -a /etc/udev/rules.d/backlight.rules
  printf \
    'ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="%s", RUN+="/bin/chmod g+w /sys/class/backlight/%%k/brightness"' \
    "$(ls $basedir)" | sudo tee -a /etc/udev/rules.d/backlight.rules
fi

# base dir for backlight class
basedir="/sys/class/backlight"

# get the backlight handler
handler="$basedir/$(ls $basedir)"

# get current brightness
old_brightness="$(cat "$handler/brightness")"

# get max brightness
max_brightness="$(cat "$handler/max_brightness")"

# get current brightness %
old_brightness_p="$(( 100 * old_brightness / max_brightness ))"

if [ "$1" = "dec" ]; then
  mod="-"
fi

if [ "$1" = "inc" ]; then
  mod="+"
fi

if [ "$old_brightness_p" -lt 11 ]; then
  amount="3"
elif [ "$old_brightness_p" -lt 31 ]; then
  amount="8"
elif [ "$old_brightness_p" -lt 51 ]; then
  amount="12"
else
  amount="17"
fi

if [ -n "$mod" ] && [ -n "$amount" ]; then
  chg="$mod$amount"
fi

if echo "$1" | grep "^[+-]\?[0-9]" >/dev/null; then
  chg="$1"
fi

if [ -z "$chg" ]; then
    printf "%s\n" "$old_brightness_p"
    exit
fi

echo "$chg"

# calculate new brightness %
new_brightness_p="$((old_brightness_p $chg))"

# calculate new brightness value
new_brightness="$((max_brightness * new_brightness_p / 100))"

# avoid overflowing
if [ "$new_brightness" -gt "$max_brightness" ]; then
    new_brightness="$max_brightness"
    new_brightness_p="100"
fi

# avoid negative values
if [ "$new_brightness" -lt 0 ]; then
    new_brightness="0"
    new_brightness_p="0"
fi

# set the new brightness value
printf "%s" "$new_brightness" > "$handler/brightness"
